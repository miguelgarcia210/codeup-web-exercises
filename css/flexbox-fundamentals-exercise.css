* {box-sizing: border-box;}

body {
    margin: 0;
    padding: 0;
    background: lightskyblue;
    font-family: Chalkboard, sans-serif;
}

h1 {text-align: center;}

h2, h3 {
    padding: 0;
    margin: 0;
}

.container {
    margin: 0 auto;
    width: 80%;
}

.green-box {
    background: green;
    height: 1em;
    width: 2em;
}

.border {border: 2px solid black;}

.card {
    width: 400px;
    height: 800px;
    background: white;
    padding: 1em;
    margin: 0 auto;
    /* enter needed declarations here */
    /* Did not use flex properties on this class initially.
    Implemented 'display: flex' to 'section' element instead */
    /*display: flex;*/
    /*flex-direction: column;*/
}

section {
    /* enter needed declarations here */

    /* Change display to flex: 'section' is the parent of the 'flex items' we want to manipulate */
    display: flex;
}

section:nth-of-type(1) {
    height: 3em;
    background: lightgreen;
    /* enter needed declarations here */

    /* Control horizontal positioning of elements 'justify' */
    justify-content: space-between;

    /* align 'flex items' to the center of 'flex-container' */
    align-items: center;

    /* Set a top+bottom margin for section 1 */
    margin: 10px 0;
}
section:nth-of-type(1) div:last-child {
    /* enter needed declarations here */

    /* Control cross axis alignment of the last 'flex item' in the first section */
    align-self: flex-start;
}

.purple-box {
    background: fuchsia;
    width: 3em;
    height: 1em;

    /* Set top+bottom margin for .purple-box */
    margin: 10px 0;
}

.purple-box:nth-of-type(1) {
    /* enter needed declarations here */

    /*Reference: https://css-tricks.com/flex-grow-is-weird/*/
    /*Grow 'flex-items' to take up entire width of parent container*/
    flex-grow: 2;
}

.purple-box:nth-of-type(2) {
    /* enter needed declarations here */

    /*Grow 'flex-items' to take up entire width of parent container*/
    flex-grow: 1;
}

.blue-box {
    width: 100%;
    background: blue;
    height: 10em;
}

section:nth-of-type(3) {
    /* enter needed declarations here */

    /* Set top+bottom margin for section 3 */
    margin: 10px 0;

    /* Added a border for easy display */
    border: 1px solid black;
}

section:nth-of-type(3) h3 {
    /* enter needed declarations here */

    /*Kept trying to 'justify-content' but then couldn't use 'align-self'
    twice to 'center' and 'flex-start' then realized 'flex-grow' can be used */
    align-self: center;
    flex-grow: 1;
}

.orange-circle {
    background: orange;
    width: 2em;
    height: 2em;
    border-radius: 1em;
    margin: .5em;
}

.large-brown-box {
    height: 5em;
    width: 5em;
    background: brown;
    /* enter needed declarations here */

    /*Grow 'flex-items' w/set class to evenly proportion within parent flex-container */
    flex-grow: 1;
}

.large-brown-box:nth-of-type(2) {
    margin: 0 1em;
}

section:nth-of-type(5) {
    /* enter needed declarations here */

    /*Position along main axis*/
    justify-content: space-evenly;

    /* Set top+bottom margin for section 5 */
    margin: 10px 0;
}

.yellow-box {
    background: yellow;
    width: 2em;
    height: 2em;
}

section:nth-of-type(6) {
    background: coral;
    height: 14em;
    /* enter needed declarations here */

    /* ONLY USEFUL IF WRAPPING
     Control space along cross axis. Items are (direction: row) -> cross axis = y-axis */
    align-content: space-evenly;

    /* Control horizontal positioning */
    justify-content: space-between;

    /* Control position along cross axis */
    align-items: center;

    /* Prevent overflow; contain items within flex-container */
    flex-wrap: wrap;
}

.grey-box {
    background: grey;
    width: 3em;
    height: 3em;
}

.grey-box:nth-of-type(odd) {
    height: 4em;
}